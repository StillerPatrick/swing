using System.Collections;using System.Collections.Generic;using UnityEngine;public class Hook : MonoBehaviour {    int accelerator;    private int maxVelocity = 70;    private int acceleration = 25;    public int health = 10;    public GameObject player;    public Transform trans;    public Rigidbody2D playerRigidBody;    public DistanceJoint2D distJoint;    public Vector2 radialVector()    {        Vector2 objectPosition = gameObject.GetComponent<Rigidbody2D>().position;        Vector2 anchorPosition = gameObject.GetComponent<DistanceJoint2D>().connectedBody.position;        return  anchorPosition - objectPosition;    }    public void accelerateCounterclockwise()    {        if ((Input.GetAxis("Controller1_X2") < -0.3f) && (playerRigidBody.velocity.magnitude < maxVelocity))        {            playerRigidBody.AddForce(Vector2.Perpendicular(radialVector().normalized)*acceleration);        }    }    public void accelerateClockwise()    {        if ((Input.GetAxis("Controller1_X2") > 0.3f) && (playerRigidBody.velocity.magnitude < maxVelocity))        {            playerRigidBody.AddForce(Vector2.Perpendicular(radialVector().normalized)*-acceleration);        }    }    public void hookIn()    {        if (Input.GetKeyDown("i"))        {            accelerator = 0;        }        if (Input.GetKey("i"))        {            distJoint.distance -= (float)0.01*(float)accelerator;            if (accelerator < 20)            {                accelerator++;            }        }    }        public void hookOut()    {        if (Input.GetKeyDown("k"))        {            accelerator = 0;        }        if (Input.GetKey("k"))        {            distJoint.distance += (float)0.01*(float)accelerator;            if (accelerator < 20)            {                accelerator++;            }        }    }    public void setTarget()    {        if (!distJoint.enabled && (Input.GetButton("hook1"))) {            RaycastHit2D hit = Physics2D.Raycast(trans.position, trans.rotation*Vector2.right, 20.0f);            if ((hit  && hit.rigidbody)) {                distJoint.connectedBody = hit.rigidbody;                distJoint.distance = (hit.rigidbody.position - playerRigidBody.position).magnitude;                distJoint.enabled = true;                gameObject.GetComponent<LineRenderer>().enabled = true;            }        }    }    public void letGo()    {        if (Input.GetButtonUp("hook1"))        {            distJoint.enabled = false;            gameObject.GetComponent<LineRenderer>().enabled = false;        }    }    public void controllLoop()    {        if (gameObject.GetComponent<DistanceJoint2D>().enabled)        {            accelerateClockwise();            accelerateCounterclockwise();            hookIn();            hookOut();            letGo();        }        setTarget();    }	// Use this for initialization	void Start () {        LineRenderer lineRenderer = gameObject.AddComponent<LineRenderer>();        lineRenderer.material = new Material(Shader.Find("Sprites/Default"));        lineRenderer.widthMultiplier = 0.2f;       // gameObject.GetComponent<DistanceJoint2D>().distance = (gameObject.GetComponent< - gameObject.GetComponent<Rigidbody2D>().position).magnitude;    }    // Update is called once per frame    void Update()    {        controllLoop();        if (gameObject.GetComponent<DistanceJoint2D>().enabled)        {            LineRenderer lineRenderer = GetComponent<LineRenderer>();            lineRenderer.SetPosition(0, gameObject.GetComponent<Transform>().position);            lineRenderer.SetPosition(1, gameObject.GetComponent<DistanceJoint2D>().connectedBody.position);        }    }}